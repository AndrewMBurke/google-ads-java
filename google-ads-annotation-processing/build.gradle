/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This is the build configuration for the google-ads-annotation-processing
 * subproject.
 */

plugins {
    id 'com.google.api-ads.java-conventions'
    id 'signing'
}

dependencies {
    implementation 'com.squareup:javapoet:1.11.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'org.mockito:mockito-all:1.9.5'
}

description = 'Google Ads API client library for Java annotation processor'

final def sonatypeCredentialsConfig = file(System.properties['user.home'] + '/.sonatype-creds')

publishing {
    publications {
//        googleAdsAnnotationSubproject(MavenPublication) {
//            groupId 'com.google.api-ads'
//            artifactId 'google-ads-annotation-processing'
////            artifact jar
////            artifact project(':google-ads-annotation-processing').tasks.getByName('sourceJar')
//            pom {
//                name = "Google Ads API client library for Java"
//                description = "Parent for the google-ads-java subprojects"
//                url = 'https://github.com/googleads/google-ads-java'
//                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:https://github.com/googleads/google-ads-java'
//                    developerConnection = 'scm:git:https://github.com/googleads/google-ads-java'
//                    url = 'https://github.com/googleads/google-ads-java'
//                }
//                developers {
//                    developer {
//                        id = 'josh'
//                        name = 'Josh Radcliff'
//                        email = 'jradcliff@users.noreply.github.com'
//                        organization = 'Google'
//                        organizationUrl = 'https://www.google.com'
//                    }
//                    developer {
//                        id = 'nick'
//                        name = 'Nick Birnie'
//                        email = 'nwbirnie@users.noreply.github.com'
//                        organization = 'Google'
//                        organizationUrl = 'https://www.google.com'
//                    }
//                    developer {
//                        id = 'devin'
//                        name = 'Devin Chasanoff'
//                        email = 'devchas@users.noreply.github.com'
//                        organization = 'Google'
//                        organizationUrl = 'https://www.google.com'
//                    }
//                }
//            }
//        }
    }

    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            name = "sonatype"

            if (sonatypeCredentialsConfig.exists()) {
                def props = new Properties()
                sonatypeCredentialsConfig.withInputStream { props.load(it) }
                credentials {
                    username props['username']
                    password props['password']
                }
            }
        }
    }
}

signing {
//    sign publishing.publications.googleAdsAnnotationSubproject
}

// Provide a helpful error message for missing sonatype credentials.
tasks.findAll {
    if (it.name.matches("publish.+ToSonatypeRepository")) {
        it.doFirst {
            if (!sonatypeCredentialsConfig.exists()) {
                throw new GradleException("Unable to load Sonatype credentials from ${sonatypeCredentialsConfig}.")
            }
        }
    }
}