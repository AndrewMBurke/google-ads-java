
plugins {
    id 'com.google.api-ads.java-conventions'
    id 'signing'
}



final def sonatypeCredentialsConfig = file(System.properties['user.home'] + '/.sonatype-creds')

publishing {
    publications {
        //publication -> project.
//            publication ->
//            project.shadow.component(publication)
//            // Publishes the javadoc + sources with the shadowjar.
//            configurations.javadocElements.artifacts.each {
//                artifact it
//            }
//            configurations.sourcesElements.artifacts.each {
//                artifact it
//            }

        release(MavenPublication) {
//            from components.java

            groupId = 'com.google.api-ads'
            artifactId = 'google-ads-parent'

            pom {
                name = "Google Ads API client library for Java"
                description = "Parent for the google-ads-java subprojects"
                url = 'https://github.com/googleads/google-ads-java'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/googleads/google-ads-java'
                    developerConnection = 'scm:git:https://github.com/googleads/google-ads-java'
                    url = 'https://github.com/googleads/google-ads-java'
                }
                developers {
                    developer {
                        id = 'josh'
                        name = 'Josh Radcliff'
                        email = 'jradcliff@users.noreply.github.com'
                        organization = 'Google'
                        organizationUrl = 'https://www.google.com'
                    }
                    developer {
                        id = 'nick'
                        name = 'Nick Birnie'
                        email = 'nwbirnie@users.noreply.github.com'
                        organization = 'Google'
                        organizationUrl = 'https://www.google.com'
                    }
                    developer {
                        id = 'devin'
                        name = 'Devin Chasanoff'
                        email = 'devchas@users.noreply.github.com'
                        organization = 'Google'
                        organizationUrl = 'https://www.google.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            name = "sonatype"

            if (sonatypeCredentialsConfig.exists()) {
                def props = new Properties()
                sonatypeCredentialsConfig.withInputStream { props.load(it) }
                credentials {
                    username props['username']
                    password props['password']
                }
            }
        }
    }
}

signing {
    sign publishing.publications.release
}

//// Disables signing tasks except on sonatype deploy. Avoids failing build for
//// users without GPG configured.
//gradle.taskGraph.whenReady {
//    if (gradle.taskGraph.allTasks
//            .findAll { it.name.matches("publish.+ToSonatypeRepository") }
//            .isEmpty()) {
//        tasks.findByName("signShadowPublication").enabled = false
//    }
//}

// Provide a helpful error message for missing sonatype credentials.
tasks.findAll {
    if (it.name.matches("publish.+ToSonatypeRepository")) {
        it.doFirst {
            if (!sonatypeCredentialsConfig.exists()) {
                throw new GradleException("Unable to load Sonatype credentials from ${sonatypeCredentialsConfig}.")
            }
        }
    }
}
